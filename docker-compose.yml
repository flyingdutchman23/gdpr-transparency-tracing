version: '3'

services:
  gateway:
    container_name: gateway
    build: gateway
    image: gitlab-registry.tubit.tu-berlin.de/peng/peng-project/gateway
    expose:
        - "8080"
        - "8088"
    ports:
        - "8080:8080"
        - "8088:8088"
    depends_on:
        - highscore-service
        - helloworld-service

  db:
    container_name: db
    image: postgres
    volumes:
    - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: example

  helloworld-service:
    container_name: helloworld
    build: helloworld-service
    image: gitlab-registry.tubit.tu-berlin.de/peng/peng-project/helloworld
    ports:
      - "8081:8081"
    depends_on:
      - db
    links:
      - db
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831

  highscore-service:
    container_name: highscore
    build: highscore-service
    image: gitlab-registry.tubit.tu-berlin.de/peng/peng-project/highscore
    ports:
      - "8082:8082"
    depends_on:
      - db
    links:
      - db
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - DATABASE_HOST=postgres

  save-score-service:
    container_name: savescore
    build: save-score-service
    image: gitlab-registry.tubit.tu-berlin.de/peng/peng-project/savescore
    ports:
      - "8083:8083"
    depends_on:
      - db
      - highscore-service
    links:
      - db
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - DATABASE_HOST=postgres

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.18
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"

  personal-data-jaeger-extract:
    build: personal-data-jaeger-extract
    image: gitlab-registry.tubit.tu-berlin.de/peng/peng-project/personal-data-jaeger-extract
    ports:
      - "5000:5000"
    depends_on:
      - jaeger
    environment:
      - JAEGER_QUERY_HOST=jaeger
